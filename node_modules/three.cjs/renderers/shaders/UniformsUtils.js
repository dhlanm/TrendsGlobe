/**
 * Uniform Utilities
 */
var UniformsUtils;
var toString = Object.prototype.toString;
var instance;
UniformsUtils = {
	merge: function (uniforms) {
		var merged = {};
		for (var u = 0; u < uniforms.length; u++) {
			var tmp = this.clone(uniforms[u]);
			for (var p in tmp) {
				merged[p] = tmp[p];
			}
		}
		return merged;
	},
	clone: function (uniforms_src) {
		var uniforms_dst = {};
		for (var u in uniforms_src) {
			uniforms_dst[u] = {};
			for (var p in uniforms_src[u]) {
				var parameter_src = uniforms_src[u][p];
				if (!!(instance = parameter_src) && !!instance.isColor || !!(instance = parameter_src) && !!instance.isVector2 || !!(instance = parameter_src) && !!instance.isVector3 || !!(instance = parameter_src) && !!instance.isVector4 || !!(instance = parameter_src) && !!instance.isMatrix4 || !!(instance = parameter_src) && !!instance.isTexture) {
					uniforms_dst[u][p] = parameter_src.clone();
				} else if (toString.call(parameter_src).slice(8, -1) === 'Array') {
					uniforms_dst[u][p] = parameter_src.slice();
				} else {
					uniforms_dst[u][p] = parameter_src;
				}
			}
		}
		return uniforms_dst;
	}
};
exports.UniformsUtils = UniformsUtils;