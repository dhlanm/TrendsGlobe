/**
 * @author alteredq / http://alteredqualia.com/
 */
var TextureModule = require('./Texture');
var CompressedTexture;
CompressedTexture = function (mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy) {
	TextureModule.Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);
	this.image = {
		width: width,
		height: height
	};
	this.mipmaps = mipmaps;
	// no flipping for cube textures
	// (also flipping doesn't work for compressed textures )
	this.flipY = false;
	// can't generate mipmaps for compressed textures
	// mips must be embedded in DDS files
	this.generateMipmaps = false;
};
CompressedTexture.prototype = Object.create(TextureModule.Texture.prototype);
CompressedTexture.prototype.constructor = CompressedTexture;
CompressedTexture.prototype.clone = function () {
	var texture = new CompressedTexture();
	TextureModule.Texture.prototype.clone.call(this, texture);
	return texture;
};
CompressedTexture.prototype.isCompressedTexture = true;
exports.CompressedTexture = CompressedTexture;