/**************************************************************
 *	Quadratic Bezier curve
 **************************************************************/
var CurveUtilsModule = require('../CurveUtils');
var ShapeUtilsModule = require('../ShapeUtils');
var Vector2Module = require('../../math/Vector2');
var CurveModule = require('../core/Curve');
var QuadraticBezierCurve;
QuadraticBezierCurve = function (v0, v1, v2) {
	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;
};
QuadraticBezierCurve.prototype = Object.create(CurveModule.Curve.prototype);
QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;
QuadraticBezierCurve.prototype.getPoint = function (t) {
	var vector = new Vector2Module.Vector2();
	vector.x = ShapeUtilsModule.ShapeUtils.b2(t, this.v0.x, this.v1.x, this.v2.x);
	vector.y = ShapeUtilsModule.ShapeUtils.b2(t, this.v0.y, this.v1.y, this.v2.y);
	return vector;
};
QuadraticBezierCurve.prototype.getTangent = function (t) {
	var vector = new Vector2Module.Vector2();
	vector.x = CurveUtilsModule.CurveUtils.tangentQuadraticBezier(t, this.v0.x, this.v1.x, this.v2.x);
	vector.y = CurveUtilsModule.CurveUtils.tangentQuadraticBezier(t, this.v0.y, this.v1.y, this.v2.y);
	// returns unit vector
	return vector.normalize();
};
QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;
exports.QuadraticBezierCurve = QuadraticBezierCurve;