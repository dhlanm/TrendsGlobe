/**************************************************************
 *	Ellipse curve
 **************************************************************/
var Vector2Module = require('../../math/Vector2');
var CurveModule = require('../core/Curve');
var EllipseCurve;
EllipseCurve = function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise) {
	this.aX = aX;
	this.aY = aY;
	this.xRadius = xRadius;
	this.yRadius = yRadius;
	this.aStartAngle = aStartAngle;
	this.aEndAngle = aEndAngle;
	this.aClockwise = aClockwise;
};
EllipseCurve.prototype = Object.create(CurveModule.Curve.prototype);
EllipseCurve.prototype.constructor = EllipseCurve;
EllipseCurve.prototype.getPoint = function (t) {
	var deltaAngle = this.aEndAngle - this.aStartAngle;
	if (deltaAngle < 0)
		deltaAngle += Math.PI * 2;
	if (deltaAngle > Math.PI * 2)
		deltaAngle -= Math.PI * 2;
	var angle;
	if (this.aClockwise === true) {
		angle = this.aEndAngle + (1 - t) * (Math.PI * 2 - deltaAngle);
	} else {
		angle = this.aStartAngle + t * deltaAngle;
	}
	var vector = new Vector2Module.Vector2();
	vector.x = this.aX + this.xRadius * Math.cos(angle);
	vector.y = this.aY + this.yRadius * Math.sin(angle);
	return vector;
};
EllipseCurve.prototype.isEllipseCurve = true;
exports.EllipseCurve = EllipseCurve;