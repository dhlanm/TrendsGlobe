/**************************************************************
 *	Cubic Bezier curve
 **************************************************************/
var CurveUtilsModule = require('../CurveUtils');
var Vector2Module = require('../../math/Vector2');
var ShapeUtilsModule = require('../ShapeUtils');
var CurveModule = require('../core/Curve');
var CubicBezierCurve;
CubicBezierCurve = function (v0, v1, v2, v3) {
	this.v0 = v0;
	this.v1 = v1;
	this.v2 = v2;
	this.v3 = v3;
};
CubicBezierCurve.prototype = Object.create(CurveModule.Curve.prototype);
CubicBezierCurve.prototype.constructor = CubicBezierCurve;
CubicBezierCurve.prototype.getPoint = function (t) {
	var tx, ty;
	tx = ShapeUtilsModule.ShapeUtils.b3(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
	ty = ShapeUtilsModule.ShapeUtils.b3(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
	return new Vector2Module.Vector2(tx, ty);
};
CubicBezierCurve.prototype.getTangent = function (t) {
	var tx, ty;
	tx = CurveUtilsModule.CurveUtils.tangentCubicBezier(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x);
	ty = CurveUtilsModule.CurveUtils.tangentCubicBezier(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
	var tangent = new Vector2Module.Vector2(tx, ty);
	tangent.normalize();
	return tangent;
};
CubicBezierCurve.prototype.isCubicBezierCurve = true;
exports.CubicBezierCurve = CubicBezierCurve;