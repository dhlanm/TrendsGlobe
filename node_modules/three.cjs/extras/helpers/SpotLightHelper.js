/**
 * @author alteredq / http://alteredqualia.com/
 * @author mrdoob / http://mrdoob.com/
 * @author WestLangley / http://github.com/WestLangley
*/
var Vector3Module = require('../../math/Vector3');
var MeshModule = require('../../objects/Mesh');
var MeshBasicMaterialModule = require('../../materials/MeshBasicMaterial');
var Matrix4Module = require('../../math/Matrix4');
var CylinderGeometryModule = require('../geometries/CylinderGeometry');
var Object3DModule = require('../../core/Object3D');
var SpotLightHelper;
SpotLightHelper = function (light) {
	Object3DModule.Object3D.call(this);
	this.light = light;
	this.light.updateMatrixWorld();
	this.matrix = light.matrixWorld;
	this.matrixAutoUpdate = false;
	var geometry = new CylinderGeometryModule.CylinderGeometry(0, 1, 1, 8, 1, true);
	geometry.applyMatrix(new Matrix4Module.Matrix4().makeTranslation(0, -0.5, 0));
	geometry.applyMatrix(new Matrix4Module.Matrix4().makeRotationX(-Math.PI / 2));
	var material = new MeshBasicMaterialModule.MeshBasicMaterial({
		wireframe: true,
		fog: false
	});
	this.cone = new MeshModule.Mesh(geometry, material);
	this.add(this.cone);
	this.update();
};
SpotLightHelper.prototype = Object.create(Object3DModule.Object3D.prototype);
SpotLightHelper.prototype.constructor = SpotLightHelper;
SpotLightHelper.prototype.dispose = function () {
	this.cone.geometry.dispose();
	this.cone.material.dispose();
};
SpotLightHelper.prototype.update = function () {
	var vector = new Vector3Module.Vector3();
	var vector2 = new Vector3Module.Vector3();
	return function () {
		var coneLength = this.light.distance ? this.light.distance : 10000;
		var coneWidth = coneLength * Math.tan(this.light.angle);
		this.cone.scale.set(coneWidth, coneWidth, coneLength);
		vector.setFromMatrixPosition(this.light.matrixWorld);
		vector2.setFromMatrixPosition(this.light.target.matrixWorld);
		this.cone.lookAt(vector2.sub(vector));
		this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
	};
}();
SpotLightHelper.prototype.isSpotLightHelper = true;
exports.SpotLightHelper = SpotLightHelper;