/**
 * @author mrdoob / http://mrdoob.com/
 */
var LineModule = require('../../objects/Line');
var Vector3Module = require('../../math/Vector3');
var ColorModule = require('../../math/Color');
var Three = require('../../Three');
var LineBasicMaterialModule = require('../../materials/LineBasicMaterial');
var GeometryModule = require('../../core/Geometry');
var GridHelper;
GridHelper = function (size, step) {
	var geometry = new GeometryModule.Geometry();
	var material = new LineBasicMaterialModule.LineBasicMaterial({ vertexColors: Three.VertexColors });
	this.color1 = new ColorModule.Color(4473924);
	this.color2 = new ColorModule.Color(8947848);
	for (var i = -size; i <= size; i += step) {
		geometry.vertices.push(new Vector3Module.Vector3(-size, 0, i), new Vector3Module.Vector3(size, 0, i), new Vector3Module.Vector3(i, 0, -size), new Vector3Module.Vector3(i, 0, size));
		var color = i === 0 ? this.color1 : this.color2;
		geometry.colors.push(color, color, color, color);
	}
	LineModule.Line.call(this, geometry, material, Three.LinePieces);
};
GridHelper.prototype = Object.create(LineModule.Line.prototype);
GridHelper.prototype.constructor = GridHelper;
GridHelper.prototype.setColors = function (colorCenterLine, colorGrid) {
	this.color1.set(colorCenterLine);
	this.color2.set(colorGrid);
	this.geometry.colorsNeedUpdate = true;
};
GridHelper.prototype.isGridHelper = true;
exports.GridHelper = GridHelper;