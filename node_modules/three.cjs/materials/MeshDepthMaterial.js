/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  opacity: <float>,
 *
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */
var MaterialModule = require('./Material');
var MeshDepthMaterial;
MeshDepthMaterial = function (parameters) {
	MaterialModule.Material.call(this);
	this.type = 'MeshDepthMaterial';
	this.morphTargets = false;
	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.setValues(parameters);
};
MeshDepthMaterial.prototype = Object.create(MaterialModule.Material.prototype);
MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;
MeshDepthMaterial.prototype.clone = function () {
	var material = new MeshDepthMaterial();
	MaterialModule.Material.prototype.clone.call(this, material);
	material.wireframe = this.wireframe;
	material.wireframeLinewidth = this.wireframeLinewidth;
	return material;
};
MeshDepthMaterial.prototype.isMeshDepthMaterial = true;
exports.MeshDepthMaterial = MeshDepthMaterial;