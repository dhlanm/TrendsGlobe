/**
 * @author mrdoob / http://mrdoob.com/
 * @author alteredq / http://alteredqualia.com/
 *
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  blending: THREE.NormalBlending,
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round",
 *
 *  vertexColors: <bool>
 *
 *  fog: <bool>
 * }
 */
var Three = require('../Three');
var ColorModule = require('../math/Color');
var MaterialModule = require('./Material');
var LineBasicMaterial;
LineBasicMaterial = function (parameters) {
	MaterialModule.Material.call(this);
	this.type = 'LineBasicMaterial';
	this.color = new ColorModule.Color(16777215);
	this.linewidth = 1;
	this.linecap = 'round';
	this.linejoin = 'round';
	this.vertexColors = Three.NoColors;
	this.fog = true;
	this.setValues(parameters);
};
LineBasicMaterial.prototype = Object.create(MaterialModule.Material.prototype);
LineBasicMaterial.prototype.constructor = LineBasicMaterial;
LineBasicMaterial.prototype.clone = function () {
	var material = new LineBasicMaterial();
	MaterialModule.Material.prototype.clone.call(this, material);
	material.color.copy(this.color);
	material.linewidth = this.linewidth;
	material.linecap = this.linecap;
	material.linejoin = this.linejoin;
	material.vertexColors = this.vertexColors;
	material.fog = this.fog;
	return material;
};
LineBasicMaterial.prototype.isLineBasicMaterial = true;
exports.LineBasicMaterial = LineBasicMaterial;